[package]
name = "gizmo-db-wasm"
description = "A web assembly module that implements a small, fast graph database with a powerful query engine"
version = "0.0.0"
categories = ["wasm"]
readme = "README.md"
edition = "2018"


[lib]
crate-type = ["cdylib"]

[profile.release]
lto = true

[features]
default = ["regex"]
regex = []

[dependencies]
js-sys = "0.3.22"
futures-signals = "0.3.15"
futures = "0.3.4"
futures-core = "0.3.4"
futures-util = "0.3.4"
futures-channel = "0.3.4"
wasm-bindgen-futures = "0.4.10"

[target.'cfg(feature = "regex")'.dependencies]
gizmo-db = { path = "../gizmo-db", default-features=false, features = ["regex"] }

[target.'cfg(not(feature = "regex"))'.dependencies]
gizmo-db = { path = "../gizmo-db", default-features=false, features = [] }

[dependencies.web-sys]
version = "0.3.37"
features = [
    "console",
    "IdbKeyRange", 
    "IdbDatabase", 
    "IdbRequest", 
    "DomException", 
    "IdbTransaction", 
    "IdbTransactionMode", 
    "IdbCursorWithValue", 
    "IdbObjectStore", 
    "IdbObjectStoreParameters",
    "IdbVersionChangeEvent",
    "IdbCursor",
    "IdbFactory",
    "IdbOpenDbRequest",
    "IdbIndex",
    "Window",
]

[dependencies.wasm-bindgen]
version = "0.2.45"


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.2.45"
